@using PL.Web.API
@using Common.Entities
@{ 
    Layout = "~/_authentication.cshtml";

    var userAPI = new UsersAPI();
    var awardAPI = new AwardsAPI();

    string type = Request["Type"];

    Guid id;
    Guid.TryParse(Request["Id"], out id);

    string name = Request["Name"];

    if (!User.IsInRole("admin") && (User.Identity.Name != name))
    {
        Response.Write("You are not allowed to edit the lists of users and awards.");
        return;
    }

    string image = Request["Avatar"];
    if (image.Length == 0)
    {
        image = null;
    }

    if (type == "user")
    {
        var dateArr = Request["DateOfBirth"].Split('-');
        if (dateArr.Length != 3)
        {
            Response.Write("Invalid date of birth.");
            return;
        }
        int year, mount, day;
        int.TryParse(dateArr[0], out year);
        int.TryParse(dateArr[1], out mount);
        int.TryParse(dateArr[2], out day);

        var birthDay = new DateTime(year, mount, day);
        var password = Request["Password"];

        var user = new User(name, birthDay, image, false);

        if (password != "")
        {
            userAPI.SetPassword(user.Id, password);
        }

        switch (userAPI.CheckUser(user))
        {
            case UserStatus.InvalidName:
                Response.Write("Invalid name");
                return;
            case UserStatus.InvalidDateOfBirth:
                Response.Write("Invalid date of birth");
                return;
        }

        if (id != Guid.Empty)
        {
            userAPI.UpdateUserById(id, user);
        }
        else
        {
            if (userAPI.CheckUser(user) == UserStatus.Exists)
            {
                Response.Write("A user with the same name already exists.");
                return;
            }
            userAPI.AddUser(user);
        }
    }
    else
    {
        var award = new Award(name, image);
        switch (awardAPI.CheckAward(award))
        {
            case AwardStatus.InvalidTitle:
                Response.Write("Invalid award title");
                return;
        }

        if (id != Guid.Empty)
        {
            awardAPI.UpdateAwardById(id, award);
        }
        else
        {
            if (awardAPI.CheckAward(award) == AwardStatus.Exists)
            {
                Response.Write("An award with that title already exists.");
                return;
            }
            awardAPI.AddAward(award);
        }
    }
}